# 引入切片的原因
# 对这种经常取指定索引范围的操作，用循环十分繁琐，因此，Python提供了切片（Slice）操作符，能大大简化这种操作。
# demo
L = ['Michael', 'Sarah', 'Tracy', 'Bob', 'Jack']
# 取前3个元素，用一行代码就可以完成切片：
print(L[0:3])
# L[start : index]表示，从索引start开始取，直到索引end为止，但不包括索引end。即索引start，start + 1，... ，end - 1。
# 如果第一个索引是0，还可以省略
'''
类似的，既然Python支持L[-1]取倒数第一个元素，那么它同样支持倒数切片，试试：

>>> L[-2:]
['Bob', 'Jack']
>>> L[-2:-1]
['Bob']
记住倒数第一个元素的索引是-1。
'''
# 切片操作拓展
# 前10个数，每两个取一个： L[:10:2]
# 所有数，每5个取一个：L[::5]
# 甚至什么都不写，只写[:]就可以原样复制一个list：L[:]

# 注意:
'''
tuple也是一种list，唯一区别是tuple不可变。因此，tuple也可以用切片操作，只是操作的结果仍是tuple
字符串'xxx'也可以看成是一种list，每个元素就是一个字符。
'''